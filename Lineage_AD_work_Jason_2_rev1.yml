AWSTemplateFormatVersion: '2010-09-09'
Description: The template used to create an ECS Cluster from the ECS Console.
Parameters:
  ECSClusterName:
    Type: String
    Description: >-
      Specifies the ECS Cluster Name with which the resources would be
      associated
    Default: python-project-ASG
  SecurityGroupIds:
    Type: CommaDelimitedList
    Description: >-
      Optional - Specifies the Comma separated list of the Security Group Id of
      an existing Security Group.
    Default: ''
  VpcId:
    Type: String
    Description: >-
      Optional - Specifies the ID of an existing VPC in which to launch your
      container instances. If you specify a VPC ID, you must specify a list of
      existing subnets in that VPC. If you do not specify a VPC ID, a new VPC is
      created with at least 1 subnet.
    Default: ''
    AllowedPattern: '^(?:vpc-[0-9a-f]{8,17}|)$'
    ConstraintDescription: VPC Id must begin with 'vpc-' and have a valid uuid
  SubnetIds:
    Type: CommaDelimitedList
    Description: >-
      Optional - Specifies the Comma separated list of existing VPC Subnet Ids
      where ECS instances will run
    Default: ''
  LatestECSOptimizedAMI:
    Description: AMI ID
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id
  IamRoleInstanceProfile:
    Type: String
    Description: >-
      Specifies the Name or the Amazon Resource Name (ARN) of the instance
      profile associated with the IAM role for the instance
    Default: 'arn:aws:iam::764581325448:instance-profile/ecsInstanceRole'
Resources:
  ECSLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    DependsOn: ECSCluster
    Properties:
      LaunchTemplateData:
        ImageId:
          Ref: LatestECSOptimizedAMI
        SecurityGroupIds:
          Ref: SecurityGroupIds
        InstanceType: t3a.medium
        KeyName: MyKey
        IamInstanceProfile:
          Arn:
            Ref: IamRoleInstanceProfile
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: '30'
        UserData:
          'Fn::Base64':
            'Fn::Sub':
              - |-
                #!/bin/bash 
                echo ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config;
              - ClusterName:
                  Ref: ECSClusterName
  ECSAutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    DependsOn: ECSCluster
    Properties:
      MinSize: '01'
      MaxSize: '3'
      DesiredCapacity: '01'
      LaunchTemplate:
        LaunchTemplateId:
          Ref: ECSLaunchTemplate
        Version:
          'Fn::GetAtt':
            - ECSLaunchTemplate
            - LatestVersionNumber
      VPCZoneIdentifier:
        Ref: SubnetIds
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value:
            'Fn::Join':
              - ' - '
              - - ECS Instance
                - Ref: ECSClusterName
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName:
        Ref: ECSClusterName
      ClusterSettings:
        - Name: containerInsights
          Value: disabled
      Configuration:
        ExecuteCommandConfiguration:
          Logging: DEFAULT
      ServiceConnectDefaults:
        Namespace: python-project-ASG
      Tags: []
  EC2CapacityProvider:
    Type: 'AWS::ECS::CapacityProvider'
    Properties:
      AutoScalingGroupProvider:
        AutoScalingGroupArn:
          Ref: ECSAutoScalingGroup
        ManagedScaling:
          Status: ENABLED
          TargetCapacity: 100
        ManagedTerminationProtection: DISABLED
  ClusterCPAssociation:
    Type: 'AWS::ECS::ClusterCapacityProviderAssociations'
    DependsOn: ECSCluster
    Properties:
      Cluster:
        Ref: ECSClusterName
      CapacityProviders:
        - Ref: EC2CapacityProvider
      DefaultCapacityProviderStrategy:
        - Base: 0
          Weight: 1
          CapacityProvider:
            Ref: EC2CapacityProvider
Outputs:
  ECSCluster:
    Description: The created cluster.
    Value:
      Ref: ECSCluster
