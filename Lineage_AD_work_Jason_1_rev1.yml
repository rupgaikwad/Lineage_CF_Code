AWSTemplateFormatVersion: '2010-09-09'
Description: The template used to create an ECS Service from the ECS Console.
Parameters:
  ECSClusterName:
    Type: String
    Default: python-project-ASG
  ECSServiceName:
    Type: String
    Default: python-project
  SecurityGroupIDs:
    Type: CommaDelimitedList
    Default: sg-09d23a8728785625d
  SubnetIDs:
    Type: CommaDelimitedList
    Default: 'subnet-0c024c1376d2311db,subnet-078fbf2391fdcfeae,subnet-0419d62e16bab0dfd'
  VpcID:
    Type: String
    Default: vpc-0fe52ce741157c107
  LoadBalancerName:
    Type: String
    Default: ECS
Resources:
  ECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: python-project-ASG
      TaskDefinition: 'arn:aws:ecs:ap-south-1:764581325448:task-definition/python:1'
      LaunchType: EC2
      ServiceName: python-project
      SchedulingStrategy: REPLICA
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: python
          ContainerPort: 8080
          LoadBalancerName:
            Ref: 'AWS::NoValue'
          TargetGroupArn:
            Ref: TargetGroup
      HealthCheckGracePeriodSeconds: '200'
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            Ref: SecurityGroupIDs
          Subnets:
            Ref: SubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      DeploymentController:
        Type: ECS
      ServiceConnectConfiguration:
        Enabled: false
      PlacementStrategies:
        - Field: 'attribute:ecs.availability-zone'
          Type: spread
        - Field: instanceId
          Type: spread
      PlacementConstraints: []
      Tags: []
      EnableECSManagedTags: true
    DependsOn:
      - Listener
  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Type: application
      Name: ECS
      SecurityGroups: [sg-09fdaa80bc68e311b]
      Subnets:
        Ref: SubnetIDs
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckPath: /
      Name: newpython
      Port: 80
      Protocol: HTTP
      TargetType: ip
      HealthCheckProtocol: HTTP
      VpcId:
        Ref: VpcID
  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: TargetGroup
      LoadBalancerArn:
        Ref: LoadBalancer
      Port: 80
      Protocol: HTTP
Outputs:
  ClusterName:
    Description: The cluster used to create the service.
    Value:
      Ref: ECSClusterName
  ECSService:
    Description: The created service.
    Value:
      Ref: ECSService
  LoadBalancer:
    Description: The created load balancer.
    Value:
      Ref: LoadBalancer
  Listener:
    Description: The created listener.
    Value:
      Ref: Listener
  TargetGroup:
    Description: The created target group.
    Value:
      Ref: TargetGroup
