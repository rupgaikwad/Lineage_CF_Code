AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  EcsClusterName:
    Type: String
    Description: "MyECSCluster"
    
Resources:
  MyECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref EcsClusterName

  MyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: my-ecs-task
      ContainerDefinitions:
        - Name: python1
          Image: public.ecr.aws/c0i1q1a6/python1
          Cpu: 1024
          Memory: 2048
          Essential: true
          PortMappings:
            - ContainerPort: 8080
      NetworkMode: awsvpc

  MyECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref MyECSCluster
      ServiceName: MyECSService
      TaskDefinition: !Ref MyTaskDefinition
      DesiredCount: 1
      LaunchType: EC2  # or FARGATE if using AWS Fargate
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - subnet-0ed549b0b08f76125
            - subnet-0c02a9ea0eb042882
          SecurityGroups:
            - sg-0b848ba146a371293

  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: MyASG
      LaunchConfigurationName: !Ref MyLaunchConfiguration
      MinSize: 1
      MaxSize: 3
      VPCZoneIdentifier: [subnet-0ed549b0b08f76125, subnet-0c02a9ea0eb042882]
      HealthCheckType: EC2
      HealthCheckGracePeriod: 300

  MyLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-011ab7c70f5b5170a  # Replace with your AMI ID
      InstanceType: t3a.medium  # Replace with your instance type
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            echo ECS_CLUSTER=${MyECSCluster} >> /etc/ecs/ecs.config

            
  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyLoadBalencer
      Subnets: [subnet-0ed549b0b08f76125, subnet-0c02a9ea0eb042882]
      SecurityGroups: [sg-0b848ba146a371293]
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
    
  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: MyTargetGroup
      Protocol: HTTP
      Port: 80
      VpcId: vpc-02dd0111dd97774bf
      TargetType: instance
      HealthCheckProtocol: HTTP
      HealthCheckPort: 8080
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      Tags:
        - Key: Name
          Value: MyTargetGroup
  
  HttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            StatusCode: 200
            ContentBody: "OK"
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            StatusCode: 200
            ContentType: text/plain
            ContentBody: "OK"
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: '443'
            StatusCode: HTTP_301

  HttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            StatusCode: 200
            ContentBody: "OK"
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 443
      Protocol: HTTPS
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            StatusCode: 200
            ContentType: text/plain
            ContentBody: "OK"
      SslPolicy: ELBSecurityPolicy-2016-08
      Certificates:
        - CertificateArn: "arn:aws:acm:us-east-2:764581325448:certificate/cc37dfa8-1283-42e2-abca-aaf1d46263e1"  # Replace with your SSL certificate ARN
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyTargetGroup
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref MyTargetGroup
                Weight: 1
                
           
  EcsCpuAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: EcsCpuAlarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 2
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Period: 300
      Statistic: Average
      Threshold: 80
      ActionsEnabled: true
      AlarmActions:
        - !Ref MySNSTopic
      Dimensions:
        - Name: ClusterName
          Value: !Ref MyECSCluster

  EcsMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: EcsMemoryAlarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 2
      MetricName: MemoryUtilization
      Namespace: AWS/ECS
      Period: 300
      Statistic: Average
      Threshold: 80
      ActionsEnabled: true
      AlarmActions:
        - !Ref MySNSTopic
      Dimensions:
        - Name: ClusterName
          Value: !Ref MyECSCluster

  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: MySNSTopic
      TopicName: MySNSTopic

  MySNSTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref MySNSTopic
      Endpoint: sooryavanshirup@gmail.com    
